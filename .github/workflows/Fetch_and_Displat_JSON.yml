name: Fetch and Display JSON

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# on:
#   schedule:
#     - cron: '0 * * * *' # 매 시간 정각에 실행 (UTC 기준)

jobs:
  build:
    runs-on: ubuntu-latest 

    steps:
    - name: Checkout 코드
      uses: actions/checkout@v2

    # 23:11 23:59 00:01 00:10 02:10 02:11 03:00
    # 00시 <= & < 03시 : 23시 적용 15 18
    # 03시 <= & < 06시 : 02시 적용
    # ...
    - name: base_time, base_date 파라미터 설정 # '0200', '0500', '0800', '1100', '1400', '1700', '2000', '2300'
      run: |
        now_hour=$(date +'%H')
        if [ $now_hour -ge 15 ] && [ $now_hour -lt 18 ]; then
          echo "base_time=2300" >> $GITHUB_ENV
          echo "base_date=$(date -d "yesterday" +'%Y%m%d')" >> $GITHUB_ENV
        elif [ $now_hour -ge 18 ] && [ $now_hour -lt 21 ]; then
          echo "base_time=0200" >> $GITHUB_ENV
          echo "base_date=$(date +'%Y%m%d')" >> $GITHUB_ENV
        elif [ $now_hour -ge 21 ] && [ $now_hour -lt 0 ]; then
          echo "base_time=0500" >> $GITHUB_ENV
          echo "base_date=$(date +'%Y%m%d')" >> $GITHUB_ENV
        elif [ $now_hour -ge 0 ] && [ $now_hour -lt 3 ]; then
          echo "base_time=0800" >> $GITHUB_ENV
          echo "base_date=$(date +'%Y%m%d')" >> $GITHUB_ENV
        elif [ $now_hour -ge 3 ] && [ $now_hour -lt 6 ]; then
          echo "base_time=1100" >> $GITHUB_ENV
          echo "base_date=$(date +'%Y%m%d')" >> $GITHUB_ENV
        elif [ $now_hour -ge 6 ] && [ $now_hour -lt 9 ]; then
          echo "base_time=1400" >> $GITHUB_ENV
          echo "base_date=$(date +'%Y%m%d')" >> $GITHUB_ENV
        elif [ $now_hour -ge 9 ] && [ $now_hour -lt 12 ]; then
          echo "base_time=1700" >> $GITHUB_ENV
          echo "base_date=$(date +'%Y%m%d')" >> $GITHUB_ENV
        elif [ $now_hour -ge 12 ] && [ $now_hour -lt 15 ]; then
          echo "base_time=2000" >> $GITHUB_ENV
          echo "base_date=$(date +'%Y%m%d')" >> $GITHUB_ENV
        else
          echo "No parameters specified for the current time ($now_hour)"
          exit 1
        fi

    - name: 이외의 Parameters 설정
      id: parameters
      run: |
        echo "numOfRows=144" >> $GITHUB_ENV
        echo "dataType=JSON" >> $GITHUB_ENV
        echo "pageNo=1" >> $GITHUB_ENV
        echo "nx=61" >> $GITHUB_ENV
        echo "ny=126" >> $GITHUB_ENV

    - name: Fetch JSON from URL
      env:
        OPEN_API_KEY: ${{ secrets.OPEN_API_KEY }}
        PARAM1: ${{ env.numOfRows }}
        PARAM2: ${{ env.dataType }}
        PARAM3: ${{ env.pageNo }}
        PARAM4: ${{ env.base_date }}
        PARAM5: ${{ env.base_time }}
        PARAM6: ${{ env.nx }}
        PARAM7: ${{ env.ny }}
      run: |
        # 시크릿 값과 환경 변수로 설정된 파라미터를 사용하여 URL에서 JSON 데이터를 가져오고 출력 파일에 저장
        curl -s -o response.json "http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getVilageFcst?serviceKey=$OPEN_API_KEY&numOfRows=$PARAM1&dataType=$PARAM2&pageNo=$PARAM3&base_date=$PARAM4&base_time=$PARAM5&nx=$PARAM6&ny=$PARAM7"

    - name: Display JSON Response
      run: |
        # JSON 파일 내용을 표시
        cat response.json
        # 디렉토리 생성 또는 이미 존재하면 스킵
        mkdir -p docs
        # JSON 파일을 docs 디렉토리로 이동 (덮어쓰기)
        mv response.json docs/response.json
        echo "JSON file generated and saved to docs directory."

    - name: Commit and Push Changes
      run: |
        git config --local user.email "siook1239@gmail.com"
        git config --local user.name "maker-kiku"
        git add docs/response.json
        git commit -m "Update JSON data"
        git push

    # - name: Run Update README.md File
    #   run: |
    #     git add .
    #     git diff
    #     git config --local user.email "email"
    #     git config --local user.name "name"
    #     git commit -m ":smiley: Update README.md file"
    #     git push

